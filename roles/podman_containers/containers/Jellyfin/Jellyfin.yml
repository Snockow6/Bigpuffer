---
- name: Pull an image {{ item }}
  containers.podman.podman_image:
    name: ghcr.io/linuxserver/jellyfin:latest

- name: Make "{{ item }}" Systemd service
  copy:
    dest: "/etc/systemd/system/container-{{ item }}.service"
    content: |
      [Unit]
      Description={{ item }} container
      After=multi-user.target
      Wants=multi-user.target, network-online.target
      RequiresMountsFor={{ ContainerData }}/{{ item }}, {{ Anime }}, /run/containers/storage


      [Service]
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/podman kill {{ item }}
      ExecStartPre=-/usr/bin/podman rm {{ item }}
      ExecStartPre=-/usr/bin/podman pull ghcr.io/linuxserver/jellyfin:latest
      ExecStart=/usr/bin/podman run \
      --name {{ item }} \
      -e PUID="{{ UserID }}" \
      -e PGID="{{ GroupID }}" \
      -e TZ="{{ TimeZone }}" \
      -v "{{ ContainerData }}/{{ item }}/Config:/config:Z,rw" \
      -v "{{ Anime }}:/Anime:rw" \
      -v "{{ TV }}:/TV:rw" \
      -v "{{ Youtube }}:/Youtube:rw" \
      -p 8096:8096 \
      ghcr.io/linuxserver/jellyfin:latest

      ExecStop=/usr/bin/podman stop {{ item }}

      [Install]
      WantedBy=multi-user.target
  register: state

- name: restart {{ item }} service if change
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    enabled: yes
    name: "container-{{ item }}"
  when: state.changed == true

- name: Start {{ item }} service
  ansible.builtin.systemd:
    state: started
    enabled: yes
    name: "container-{{ item }}"
  when: state.changed == false
