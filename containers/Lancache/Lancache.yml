---
- name: Create {{ item }} pod
  containers.podman.podman_pod:
    name: "{{ item }}"
    state: started
    ports:
      - "{{ lancacheIP }}:53:53/udp"
      - "{{ lancacheIP }}:53:53/tcp"
      - "{{ lancacheIP }}:80:80/tcp"
      - "{{ lancacheIP }}:443:443/tcp"
  register: state
  
- name: Create {{ item }}-dns Podman Container
  containers.podman.podman_container:
    name: "{{ item }}-dns"
    pod: "{{ item }}"
    image: docker.io/lancachenet/lancache-dns:latest
    env:
      LANCACHE_IP="{{ lancacheIP }}"
      USE_GENERIC_CACHE="true"

- name: Create {{ item }}-monilithic Podman Container
  containers.podman.podman_container:
    name: "{{ item }}-monolithic"
    pod: "{{ item }}"
    image: docker.io/lancachenet/monolithic:latest
    env:
      CACHE_DISK_SIZE="500000m"
      CACHE_MEM_SIZE="500M"
      CACHE_MAX_AGE="350d"
      UPSTREAM_DNS="1.1.1.1"
    volume:
      - "{{ ContainerCache }}/{{ item }}/:/data/cache:Z,rw"
      - "/Container/{{ item }}/logs:/data/logs:Z,rw"

- name: Make {{ item }} Systemd service
  shell: cd /etc/systemd/system && podman generate systemd --files --name {{ item }}
  when: state.changed == true

- name: restart {{ item }} service if change
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    enabled: yes
    name: "pod-{{ item }}"
  when: state.changed == true

- name: Start {{ item }} service
  ansible.builtin.systemd:
    state: started
    enabled: yes
    name: "pod-{{ item }}"
  when: state.changed == false