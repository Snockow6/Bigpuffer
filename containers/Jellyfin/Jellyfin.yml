---
- name: Create {{ item }} Podman Container
  containers.podman.podman_container:
    name: "{{ item }}"
    image: ghcr.io/linuxserver/jellyfin:latest
    state: created
    device:
      - "/dev/dri/renderD128:/dev/dri/renderD128:rw"
      - "/dev/dri/card0:/dev/dri/card0:rw"
    ports:
      - 8096:8096
    volume:
      - "/Container/{{ item }}/logs:/config/log:Z,rw"
      - "/mnt/Gamma/Cache/Jellyfin/cache:/config/cache:z,rw"
      - "/mnt/Gamma/Cache/Jellyfin/transcodes:/config/data/transcodes:z,rw"
      - "/Container/{{ item }}/config:/config:Z,rw"
      - "{{ Podcasts }}:/data/Podcasts:z,ro"
      - "{{ Youtubevids }}:/data/YoutubeVids:z,ro"
      - "{{ Music }}:/data/Music:z,ro"
      - "{{ Anime }}:/data/Anime:ro"
    env:
      PUID="{{ UserID }}"
      PGID="{{ GroupID }}"
      TZ="{{ TimeZone }}"
  register: state

- name: Make {{ item }} Systemd service
  shell: cd /etc/systemd/system/ && podman generate systemd --files --name {{ item }}
  when: state.changed == true

- name: restart {{ item }} service if change
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: yes
    enabled: yes
    name: "container-{{ item }}"
  when: state.changed == true

- name: Start {{ item }} service
  ansible.builtin.systemd:
    state: started
    enabled: yes
    name: "container-{{ item }}"
  when: state.changed == false